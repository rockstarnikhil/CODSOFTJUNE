{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "99cfee9f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import argparse\n",
    "\n",
    "parser = argparse.ArgumentParser(description=\"Command-Line To-Do List Application\")\n",
    "parser.add_argument('action', choices=['add', 'list', 'complete', 'remove', 'edit'], help='Action to perform')\n",
    "parser.add_argument('--task', help='Task description')\n",
    "parser.add_argument('--task-id', type=int, help='Task ID for actions like complete, remove, and edit')\n",
    "\n",
    "args = parser.parse_args()\n",
    "# Data storage\n",
    "todo_list = []\n",
    "\n",
    "# Function to add a task\n",
    "def add_task(task):\n",
    "    todo_list.append(task)\n",
    "\n",
    "# Function to list tasks\n",
    "def list_tasks():\n",
    "    for i, task in enumerate(todo_list):\n",
    "        print(f\"{i + 1}. {task}\")\n",
    "\n",
    "# Main program loop\n",
    "while True:\n",
    "    action = input(\"Enter action (add/list/quit): \")\n",
    "    \n",
    "    if action == 'add':\n",
    "        task = input(\"Enter task: \")\n",
    "        add_task(task)\n",
    "    elif action == 'list':\n",
    "        list_tasks()\n",
    "    elif action == 'quit':\n",
    "        break\n",
    "import tkinter as tk\n",
    "\n",
    "# Create the main window\n",
    "root = tk.Tk()\n",
    "root.title(\"GUI To-Do List\")\n",
    "\n",
    "# Create a list to store tasks\n",
    "tasks = []\n",
    "\n",
    "# Function to add a task\n",
    "def add_task():\n",
    "    task = task_entry.get()\n",
    "    if task:\n",
    "        tasks.append(task)\n",
    "        task_listbox.insert(tk.END, task)\n",
    "        task_entry.delete(0, tk.END)\n",
    "\n",
    "# Function to remove a task\n",
    "def remove_task():\n",
    "    selected_task_index = task_listbox.curselection()\n",
    "    if selected_task_index:\n",
    "        index = selected_task_index[0]\n",
    "        task_listbox.delete(index)\n",
    "        tasks.pop(index)\n",
    "\n",
    "# Create GUI elements\n",
    "task_entry = tk.Entry(root)\n",
    "add_button = tk.Button(root, text=\"Add Task\", command=add_task)\n",
    "remove_button = tk.Button(root, text=\"Remove Task\", command=remove_task)\n",
    "task_listbox = tk.Listbox(root)\n",
    "\n",
    "# Arrange GUI elements\n",
    "task_entry.pack()\n",
    "add_button.pack()\n",
    "remove_button.pack()\n",
    "task_listbox.pack()\n",
    "\n",
    "# Start the main loop\n",
    "root.mainloop()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
